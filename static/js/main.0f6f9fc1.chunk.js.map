{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["key","frequency","loadState","serializedState","sessionStorage","getItem","JSON","parse","err","App","props","state","amount","startdate","rate","compounds","repayment","repaydate","repayfreq","display","term","summary","schedule","undefined","handleChange","bind","generate","this","setState","event","target","name","id","value","r","shouldGenerateSchedule","end","moment","add","push","start","isSameOrBefore","current","date","isRepaymentDate","repaymentDates","find","d","isSame","Object","values","every","a","isBefore","incomplete","balance","brate","Big","div","times","m","s","y","isSameOrAfter","stringify","setItem","console","log","saveState","bamount","daily","dailyInterest","enddate","subtract","accrued","paccrued","tsched","samount","toFixed","interest","year","ysum","nyear","getYear","minus","isCompoundingDate","plus","format","compounding","principal","sdate","edate","Table","responsive","hover","size","map","k","i","prefix","title","className","length","Row","Col","xs","Container","Alert","variant","Form","Group","controlId","Label","Control","type","min","onChange","Text","placeholder","as","InputGroup","step","Append","Check","inline","label","Button","onClick","Card","Body","renderSummaryByYear","renderDailySchedule","renderMonthlySchedule","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gYAeMA,G,YAAM,cAENC,EAAY,CAChB,OAAU,EACV,YAAe,IAMXC,EAAY,WACd,IACI,IAAMC,EAAkBC,eAAeC,QAAQL,GAC/C,GAAuB,MAAnBG,EACA,OAEJ,OAAOG,KAAKC,MAAMJ,GAEtB,MAAOK,GACH,SA+hBOC,E,YA5gBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,OAAQ,GACRC,UAAW,GACXC,KAAM,GACNC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,QAAS,QACTC,KAAM,GACNC,QAAS,GACTC,cAAUC,GAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAhBC,E,sFAyBMF,IALArB,KAMrByB,KAAKC,SAAS1B,O,mCAkBL2B,GAAQ,IAAD,EACQA,EAAMC,OAAzBC,EADW,EACXA,KAAMC,EADK,EACLA,GAAIC,EADC,EACDA,MACjBF,EAAOJ,KAAKC,SAAL,eAAgBG,EAAQE,IAAUN,KAAKC,SAAL,eAAgBI,EAAMC,M,uCAG/C,IAAD,EACmCN,KAAKhB,MAA/CS,EADO,EACPA,KAAMP,EADC,EACDA,UAAWI,EADV,EACUA,UAAWC,EADrB,EACqBA,UAChCgB,EAAI,GAER,IAAMP,KAAKQ,yBACT,OAAOD,EAGT,IAAIE,EAAMC,IAAOxB,GAAWyB,IAAIlB,EAAM,UACtCc,EAAEK,KAAKF,IAAOpB,IAEd,IAAIuB,EAAQH,IAAOpB,GAEnB,GAA6B,YAAzBU,KAAKhB,MAAMO,UAGb,IAFAsB,EAAMF,IAAI,EAAG,UAENE,EAAMC,eAAeL,IAC1BF,EAAEK,KAAKF,IAAOG,IACdA,EAAMF,IAAI,EAAG,eAMf,IAFAE,EAAMF,IAAIrC,EAAUiB,GAAY,QAEzBsB,EAAMC,eAAeL,IAC1BF,EAAEK,KAAKF,IAAOG,IACdA,EAAMF,IAAIrC,EAAUiB,GAAY,QAIpC,OAAOgB,I,wCAGSQ,GAChB,MAA6B,UAAzBf,KAAKhB,MAAMI,UACa,IAAnB2B,EAAQC,OAEVhB,KAAKiB,gBAAgBF,K,sCAGdA,GAGd,YAAanB,IAFUI,KAAKkB,iBACHC,MAAK,SAACC,GAAD,OAAOL,EAAQM,OAAOD,EAAG,Y,+CAQvD,OAAIE,OAAOC,OAAOvB,KAAKhB,OAAOwC,OAAM,SAACC,GAAD,MAAa,KAANA,KAC7Bf,IAAOV,KAAKhB,MAAME,WAGpBwC,SAAShB,IAAO,gBACxBV,KAAKC,SAAS,CAAC0B,YAAY,KACpB,IAET3B,KAAKC,SAAS,CAAC0B,YAAY,KACpB,IAET3B,KAAKC,SAAS,CAAC0B,YAAY,KACpB,K,oCAGKC,GACV,IAAIC,EAAQC,IAAI9B,KAAKhB,MAAMG,MAG3B,OAFA0C,EAAQA,EAAME,IAAI,KACLH,EAAQI,MAAMH,GACbE,IAAI,O,8BAGdE,EAAGC,EAAGC,GAAK,OAAOF,EAAEG,cAAc1B,IAAOwB,GAAGvB,IAAIwB,EAAG,SAAU,OAASA,EAAE,EAAIA,I,iCAExE,IAAD,EAKQnC,KAAKhB,MAJdC,EADC,EACDA,OACAO,EAFC,EAEDA,QACAN,EAHC,EAGDA,UACAG,EAJC,EAIDA,UACAI,EALC,EAKDA,KAGR,GA/Ic,SAACT,GACf,IACI,IAAMR,EAAkBG,KAAK0D,UAAUrD,GACvCP,eAAe6D,QAAQjE,EAAKG,GAEhC,MAAOK,GACH0D,QAAQC,IAAI,uCAAwCnE,EAAKW,IAwI7DyD,CAAUzC,KAAKhB,OACTgB,KAAKQ,yBAAX,CAuBA,IAlBA,IAAIkC,EAAUZ,IAAI7C,GACd0D,EAAQ3C,KAAK4C,cAAcF,GAC3BG,EAAUnC,IAAOxB,GAAWyB,IAAIlB,EAAM,UAAUqD,SAAS,IAAK,QAE9DC,EAAUjB,IAAI,GACdkB,EAAWlB,IAAI,GAIfmB,EAAS,GACTvD,EAAU,CAACwD,QAASR,EAAQS,QAAQ,GACzBC,SAAUtB,IAAI,GACdzC,UAAWyC,IAAI,GACfuB,KAAM,IAGjBA,EAAO,EACPC,EAAO,CAAE,KAAQD,EAAMD,SAAUtB,IAAI,IAChCG,EAAIvB,IAAOxB,GAAY+C,EAAEnB,eAAe+B,GAAUZ,EAAEtB,IAAI,EAAG,QAAS,CAC3E,IAAI4C,EAAQvD,KAAKwD,QAAQvB,EAAG/C,EAAWmE,GACnCE,EAAQF,IACV3D,EAAQ2D,KAAKzC,KAAK0C,GAElBA,EAAO,CAAE,KADTD,EAAOE,EACgBH,SAAUtB,IAAI,KAGnC9B,KAAKiB,gBAAiBgB,KAIxBS,EAAUA,EAAQe,MAAMpE,GACxBsD,EAAQ3C,KAAK4C,cAAcF,GAC3BhD,EAAQL,UAAYK,EAAQL,UAAUsB,IAAItB,IAExCW,KAAK0D,kBAAmBzB,KAI1BS,EAAUA,EAAQiB,KAAKZ,GACvBC,EAAWD,EACXA,EAAUjB,IAAI,GACda,EAAQ3C,KAAK4C,cAAcF,IAI7BK,EAAUA,EAAQpC,IAAIgC,GACtBjD,EAAQ0D,SAAW1D,EAAQ0D,SAASzC,IAAIgC,GACxCW,EAAKF,SAAWE,EAAKF,SAASzC,IAAIgC,IAIjB,YAAZnD,GACDQ,KAAK0D,kBAAmBzB,IACZ,UAAZzC,IACFyD,EAAOrC,KAAK,CAACI,KAAMiB,EAAE2B,OAAO,cACdhC,QAASc,EAAQS,QAAQ,GACzBJ,QAASA,EAAQI,QAAQ,GACzBH,SAAUA,EAASG,QAAQ,GAC3BR,MAAOA,EAAMQ,QAAQ,GACrB9D,UAAWW,KAAKiB,gBAAgBgB,GAChC4B,YAAa7D,KAAK0D,kBAAkBzB,KAMtDS,EAAUA,EAAQiB,KAAKZ,GACvBE,EAAOrC,KAAK,CAACI,KAAM,gBACLY,QAASc,EAAQS,QAAQ,GACzBJ,QAAS,GACTJ,MAAO,KAGrBjD,EAAQoE,UAAYpE,EAAQL,UAAUoE,MAAM/D,EAAQ0D,UAAUD,QAAQ,GACtEzD,EAAQ0D,SAAW1D,EAAQ0D,SAASD,QAAQ,GAC5CzD,EAAQL,UAAYK,EAAQL,UAAU8D,QAAQ,GAC9CzD,EAAQqE,MAAQrD,IAAOxB,GAAW0E,OAAO,cACzClE,EAAQsE,MAAQtD,IAAOmC,GAASe,OAAO,cACvClE,EAAQT,OAAS6C,IAAI7C,GAAQkE,QAAQ,GACrCzD,EAAQF,QAAUA,EAClBE,EAAQ2D,KAAKzC,KAAK0C,GAClBtD,KAAKC,SAAS,CAACN,SAAUsD,EAAQvD,iBArF/BM,KAAKC,SAAS,CAACN,cAAUC,M,4CAyF3B,OACE,kBAACqE,EAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,EAACC,KAAK,MAC3B,+BACE,4BACE,oCACA,8CACA,gDACA,8CAGJ,+BACEpE,KAAKhB,MAAMW,SAAS0E,KAAI,SAACC,EAAGC,GAC1B,IAAIC,EAASF,EAAEjF,UAAY,gBAAkB,GAC7CmF,EAASF,EAAET,YAAc,eAAiBW,EAC1C,IAAIC,EAAQH,EAAEjF,UAAY,kBAAoB,GAE9C,OADAoF,EAAQH,EAAET,YAAc,2BAA6BY,EAEnD,wBAAIC,UAAWF,EAAQnG,IAAKkG,EAAGE,MAAOA,GACpC,4BAAKH,EAAEtD,MACP,wBAAI0D,UAAU,cAAcJ,EAAE3B,OAC9B,wBAAI+B,UAAU,cAAcJ,EAAEvB,SAC9B,wBAAI2B,UAAU,cAAcJ,EAAE1C,iB,8CAW1C,OACE,kBAACqC,EAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,EAACC,KAAK,MAC3B,+BACE,4BACE,oCACA,wBAAIM,UAAU,cAAd,8BACA,wBAAIA,UAAU,cAAd,kBAGJ,+BACE1E,KAAKhB,MAAMW,SAAS0E,KAAI,SAACC,EAAGC,GAC1B,OACE,wBAAIlG,IAAKkG,GACP,4BAAKD,EAAEtD,MACP,wBAAI0D,UAAU,cAAcJ,EAAEtB,UAC9B,wBAAI0B,UAAU,cAAcJ,EAAE1C,iB,4CAW1C,OAAI5B,KAAKhB,MAAMU,QAAQ2D,KAAKsB,QAAU,EAC7B,KAIP,oCAII3E,KAAKhB,MAAMU,QAAQ2D,KAAKgB,KAAI,SAACC,GAC3B,OACE,oCACE,kBAACM,EAAA,EAAD,CAAKvG,IAAKiG,EAAEjB,MACV,kBAACwB,EAAA,EAAD,aAAWP,EAAEjB,KAAb,cACA,kBAACwB,EAAA,EAAD,CAAKH,UAAU,cAAf,IAA8BJ,EAAElB,SAASD,QAAQ,IACjD,kBAAC0B,EAAA,EAAD,CAAKC,GAAI,Y,+BAWvB,OACE,kBAACC,EAAA,EAAD,KACE,qEACA,6BACE/E,KAAKhB,MAAM2C,YACX,kBAACqD,EAAA,EAAD,CAAOC,QAAQ,UAAf,gCAAqD,yCAArD,WAEF,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,gGACA,kBAACK,EAAA,EAAD,KACE,kBAACN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,UACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,SACLC,IAAI,IACJlF,MAAON,KAAKhB,MAAMC,OAClBwG,SAAUzF,KAAKH,eAEjB,kBAACqF,EAAA,EAAKQ,KAAN,CAAWhB,UAAU,cAArB,kIAKJ,kBAACG,EAAA,EAAD,KACE,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLI,YAAY,iDACZrF,MAAON,KAAKhB,MAAME,UAClBuG,SAAUzF,KAAKH,eAEjB,kBAACqF,EAAA,EAAKQ,KAAN,CAAWhB,UAAU,cAArB,2CAMN,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,QACpB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CACEM,GAAG,SACHtF,MAAON,KAAKhB,MAAMS,KAClBgG,SAAUzF,KAAKH,cAEf,iCACA,4BAAQS,MAAM,KAAd,YACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,cAIN,kBAACuE,EAAA,EAAD,KACE,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,QACpB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACQ,EAAA,EAAD,CAAYnB,UAAU,QACpB,kBAACQ,EAAA,EAAKI,QAAN,CACEK,YAAY,sBACZJ,KAAK,SACLO,KAAK,OACLxF,MAAON,KAAKhB,MAAMG,KAClBsG,SAAUzF,KAAKH,eAEjB,kBAACgG,EAAA,EAAWE,OAAZ,KACE,kBAACF,EAAA,EAAWH,KAAZ,eAMV,kBAACd,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,yBACA,kBAACH,EAAA,EAAKI,QAAN,CACEK,YAAY,yBACZrF,MAAON,KAAKhB,MAAMK,UAClBoG,SAAUzF,KAAKH,iBAIrB,kBAACgF,EAAA,EAAD,KACE,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,4BACA,kBAACH,EAAA,EAAKI,QAAN,CACEM,GAAG,SACHD,YAAY,6BACZrF,MAAON,KAAKhB,MAAMO,UAClBkG,SAAUzF,KAAKH,cAEf,iCACA,0CACA,+CACA,+CAKR,kBAAC+E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,4BACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLI,YAAY,4BACZrF,MAAON,KAAKhB,MAAMM,UAClBmG,SAAUzF,KAAKH,iBAIrB,kBAACgF,EAAA,EAAD,KACE,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,MAAN,2BACA,kBAACH,EAAA,EAAKI,QAAN,CACEM,GAAG,SACHtF,MAAON,KAAKhB,MAAMI,UAClBqG,SAAUzF,KAAKH,cAEf,iCACA,4BAAQS,MAAM,SAAd,oBACA,4BAAQA,MAAM,aAAd,8BAKR,kBAAC4E,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKG,MAAN,0BACA,yBAAKhH,IAAI,eAAeqG,UAAU,QAChC,kBAACQ,EAAA,EAAKc,MAAN,CACEC,QAAM,EACNC,MAAM,QACN9F,KAAK,UACLE,MAAM,QACNiF,KAAK,QACLE,SAAUzF,KAAKH,aACfQ,GAAG,cACL,kBAAC6E,EAAA,EAAKc,MAAN,CACEC,QAAM,EACNC,MAAM,iCACN9F,KAAK,UACLE,MAAM,UACNiF,KAAK,QACLE,SAAUzF,KAAKH,aACfQ,GAAG,kBAGT,kBAAC8F,EAAA,EAAD,CAAQlB,QAAQ,UAAUmB,QAASpG,KAAKD,UAAxC,oBAEF,6BACA,2CACA,4BACE,uDACA,yHAGFC,KAAKhB,MAAMW,UAA2C,IAA/BK,KAAKhB,MAAMW,SAASgF,QAC3C,kBAACE,EAAA,EAAD,KACE,kBAACwB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACA,4CACA,kBAAC1B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,CAAKH,UAAU,cAAc1E,KAAKhB,MAAMU,QAAQqE,OAChD,kBAACc,EAAA,EAAD,CAAKC,GAAI,KAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,CAAKH,UAAU,cAAc1E,KAAKhB,MAAMU,QAAQsE,OAChD,kBAACa,EAAA,EAAD,CAAKC,GAAI,KAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAKH,UAAU,cAAf,IAA8B1E,KAAKhB,MAAMU,QAAQT,QACjD,kBAAC4F,EAAA,EAAD,CAAKC,GAAI,KAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,CAAKH,UAAU,cAAf,IAA8B1E,KAAKhB,MAAMW,SAASK,KAAKhB,MAAMW,SAASgF,OAAQ,GAAG/C,SACjF,kBAACiD,EAAA,EAAD,CAAKC,GAAI,KAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,0BACA,kBAACA,EAAA,EAAD,CAAKH,UAAU,cAAf,IAA8B1E,KAAKhB,MAAMU,QAAQL,WACjD,kBAACwF,EAAA,EAAD,CAAKC,GAAI,KAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,wBACA,kBAACA,EAAA,EAAD,CAAKH,UAAU,cAAf,IAA8B1E,KAAKhB,MAAMU,QAAQ0D,UACjD,kBAACyB,EAAA,EAAD,CAAKC,GAAI,KAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,8BACA,kBAACA,EAAA,EAAD,CAAKH,UAAU,cAAf,IAA8B1E,KAAKhB,MAAMU,QAAQoE,WACjD,kBAACe,EAAA,EAAD,CAAKC,GAAI,KAEV9E,KAAKuG,wBAGR,6BACP,qDACuC,UAA/BvG,KAAKhB,MAAMU,QAAQF,SAAuBQ,KAAKwG,sBAChB,YAA/BxG,KAAKhB,MAAMU,QAAQF,SAAyBQ,KAAKyG,+B,GArgB9CC,aCvCEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0f6f9fc1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Big from 'big.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst key = 'loan-state';\n\nconst frequency = {\n  'Weekly': 7,\n  'Fortnightly': 14 \n}\n\n/* \n * Load state from sessionStorage.\n */\nconst loadState = () => {\n    try {\n        const serializedState = sessionStorage.getItem(key);\n        if (serializedState == null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n\n/* \n * Save state to sessionStorage.\n */\nconst saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(key, serializedState);\n    }\n    catch (err){\n        console.log(\"error saving state to sessionStorage\", key, state);\n    }\n};\n\nclass App extends Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = { \n      amount: '',\n      startdate: '',\n      rate: '',\n      compounds: '',\n      repayment: '',\n      repaydate: '',\n      repayfreq: '',\n      display: 'daily',\n      term: '',\n      summary: {},\n      schedule: undefined\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.generate = this.generate.bind(this);\n  }\n\n  componentDidMount() {\n    const persistedState = loadState();\n  \n\t\t/*\n\t\t * handle page refreshes without losing state.\n\t\t */\n    if (persistedState !== undefined) {\n      this.setState(loadState());\n    }\n\t\t/*\n    else {\n      this.setState({\n        amount: 200000,\n        startdate: '2019-08-09',\n        rate: 3.79,\n        repayment: 225.51,\n        repaydate: '2019-08-13',\n        repayfreq: 'Weekly',\n        compounds: 'month',\n        summary: {},\n      });\n    }\n\t\t*/\n  }\n\n  handleChange(event) {\n    const {name, id, value} = event.target;\n    name ? this.setState({[name] : value}) : this.setState({[id] : value});\n  }\n\n  repaymentDates() {\n    const { term, startdate, repaydate, repayfreq } = this.state;\n    let r = [];\n\n    if (! this.shouldGenerateSchedule()) {\n      return r;\n    }\n\n    let end = moment(startdate).add(term, 'months');\n    r.push(moment(repaydate));\n\n    let start = moment(repaydate);\n\n    if (this.state.repayfreq === 'Monthly') {\n      start.add(1, 'months');\n\n      while (start.isSameOrBefore(end)) {\n        r.push(moment(start));\n        start.add(1, 'months');\n      }\n    }\n    else {\n      start.add(frequency[repayfreq], 'days');\n\n      while (start.isSameOrBefore(end)) {\n        r.push(moment(start));\n        start.add(frequency[repayfreq], 'days');\n      }\n    }\n\n    return r;\n  }\n\n  isCompoundingDate(current) {\n    if (this.state.compounds === 'month') {\n      return current.date() === 1;\n    }\n    return this.isRepaymentDate(current);\n  }\n\n  isRepaymentDate(current) {\n    const repaymentdates = this.repaymentDates();\n    const f = repaymentdates.find((d) => current.isSame(d, 'day')) \n    return f !== undefined;\n  }\n\n  /* Basic validation for form.\n   * Every form field should be filled.\n   */\n  shouldGenerateSchedule() {\n    if (Object.values(this.state).every((a) => a !== '')) {\n      let ldate = moment(this.state.startdate);\n\n      // Prevent schedules for crazy length periods\n      if (ldate.isBefore(moment('2019-01-01'))) {\n        this.setState({incomplete: true});\n        return false;\n      }\n      this.setState({incomplete: false});\n      return true;\n    }\n    this.setState({incomplete: true});\n    return false;\n  }\n\n  dailyInterest(balance) {\n      let brate = Big(this.state.rate);\n      brate = brate.div(100);\n      let annual = balance.times(brate);\n      return annual.div(365);\n  }\n\n  getYear(m, s, y) { return m.isSameOrAfter(moment(s).add(y, 'years'), 'day') ? y+1 : y }; \n\n  generate() {\n    const { amount, \n            display, \n            startdate, \n            repayment,\n            term } = this.state; \n\n    saveState(this.state);\n    if (! this.shouldGenerateSchedule()) {\n      this.setState({schedule: undefined});\n      return;\n    }\n\n    let bamount = Big(amount);\n    let daily = this.dailyInterest(bamount);\n    let enddate = moment(startdate).add(term, 'months').subtract('1', 'days');\n\n    let accrued = Big(0);\n    let paccrued = Big(0);\n\n    /* Generate data for the schedule and summary.\n    */\n    let tsched = [];\n    let summary = {samount: bamount.toFixed(2),\n                   interest: Big(0),\n                   repayment: Big(0),\n                   year: []\n                  };\n\n    let year = 1;\n    let ysum = { 'year': year, interest: Big(0)};\n    for (var m = moment(startdate); m.isSameOrBefore(enddate); m.add(1, 'days')) {\n      let nyear = this.getYear(m, startdate, year);\n      if (nyear > year) {\n        summary.year.push(ysum);\n        year = nyear;\n        ysum = { 'year': year, interest: Big(0)};\n      }\n\n      if (this.isRepaymentDate( m )) {\n        /* On a repayment date, reduce loan balance and calculate new\n         * daily interest.\n         */\n        bamount = bamount.minus(repayment);\n        daily = this.dailyInterest(bamount);\n        summary.repayment = summary.repayment.add(repayment);\n      } \n      if (this.isCompoundingDate( m )) {\n        /* On interest compounding date, increase loan balance, calculate new\n         * daily interest, and reset accrued interest.\n         */\n        bamount = bamount.plus(accrued);\n        paccrued = accrued;\n        accrued = Big(0);\n        daily = this.dailyInterest(bamount);\n      } \n      /* Last transaction of each day is to accrue the interest for the day.\n      */\n      accrued = accrued.add(daily);\n      summary.interest = summary.interest.add(daily);\n      ysum.interest = ysum.interest.add(daily);\n\n      /* Update the schedule data depending on the display type selected.\n       */\n      if ((display === 'monthly' &&\n          this.isCompoundingDate( m )) ||\n          display === 'daily') {\n        tsched.push({date: m.format('DD/MM/YYYY'),\n                      balance: bamount.toFixed(2),\n                      accrued: accrued.toFixed(2),\n                      paccrued: paccrued.toFixed(2),\n                      daily: daily.toFixed(2),\n                      repayment: this.isRepaymentDate(m),\n                      compounding: this.isCompoundingDate(m) }\n                      );\n      }\n    }\n    /* Apply any accrued interest to get the final loan balance.\n    */\n    bamount = bamount.plus(accrued);\n    tsched.push({date: 'Final Balance',\n                  balance: bamount.toFixed(2),\n                  accrued: '',\n                  daily: ''}\n                  );\n\n    summary.principal = summary.repayment.minus(summary.interest).toFixed(2);\n    summary.interest = summary.interest.toFixed(2);\n    summary.repayment = summary.repayment.toFixed(2);\n    summary.sdate = moment(startdate).format('DD/MM/YYYY');\n    summary.edate = moment(enddate).format('DD/MM/YYYY');\n    summary.amount = Big(amount).toFixed(2);\n    summary.display = display;\n    summary.year.push(ysum);\n    this.setState({schedule: tsched, summary});\n  }\n\n  renderDailySchedule() {\n    return (\n      <Table responsive hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Daily Interest</th>\n            <th>Accrued Interest</th>\n            <th>Loan Balance</th>\n          </tr>\n        </thead>\n        <tbody>\n        { this.state.schedule.map((k, i) => {\n            let prefix = k.repayment ? 'table-success' : '';\n            prefix = k.compounding ? 'table-danger' : prefix;\n            let title = k.repayment ? 'Repayment today' : '';\n            title = k.compounding ? 'Interest compounds today' : title;\n            return (\n              <tr className={prefix} key={i} title={title}>\n                <td>{k.date}</td>\n                <td className='text-right'>{k.daily}</td>\n                <td className='text-right'>{k.accrued}</td>\n                <td className='text-right'>{k.balance}</td>\n              </tr>\n            )\n          })\n        }\n        </tbody>\n      </Table>\n    ) \n  }\n\n  renderMonthlySchedule() {\n    return (\n      <Table responsive hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th className='text-right'>Interest (previous period)</th>\n            <th className='text-right'>Loan Balance</th>\n          </tr>\n        </thead>\n        <tbody>\n        { this.state.schedule.map((k, i) => {\n            return (\n              <tr key={i}>\n                <td>{k.date}</td>\n                <td className='text-right'>{k.paccrued}</td>\n                <td className='text-right'>{k.balance}</td>\n              </tr>\n            )\n          })\n        }\n        </tbody>\n      </Table>\n    ) \n  }\n\n  renderSummaryByYear() {\n    if (this.state.summary.year.length <= 1) {\n      return null;\n    } \n\n    return (\n      <>\n        {/* <Row>\n          <Col>Summary by Year</Col>\n        </Row> */}\n        { this.state.summary.year.map((k) => {\n            return (\n              <>\n                <Row key={k.year}>\n                  <Col>Year {k.year} Interest:</Col>\n                  <Col className='text-right'>${k.interest.toFixed(2)}</Col>\n                  <Col xs={3}/>\n                </Row>\n              </>\n            )\n          })\n        }\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>Generate a Loan Amortisation Schedule</h1>\n        <br/>\n        { this.state.incomplete &&\n          <Alert variant='danger'>Please enter valid values in <strong>every</strong> field.</Alert>\n        }\n        <Row>\n          <Col>\n            <p>Fill out all fields in the form below and select Create Schedule.</p>\n            <Form>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"amount\">\n                    <Form.Label>Loan Amount</Form.Label>\n                    <Form.Control \n                      type='number'\n                      min='0'\n                      value={this.state.amount}\n                      onChange={this.handleChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      The starting loan amount, or an amount taken from a statement on a date which interest was charged (ie no accrued interest).\n                    </Form.Text>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"startdate\">\n                    <Form.Label>as at</Form.Label>\n                    <Form.Control \n                      type=\"date\" \n                      placeholder=\"Enter the date that your loan was this amount.\"\n                      value={this.state.startdate}\n                      onChange={this.handleChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      Earliest permitted date is 1/1/2019.\n                    </Form.Text>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"term\">\n                    <Form.Label>Loan Term</Form.Label>\n                    <Form.Control \n                      as=\"select\" \n                      value={this.state.term}\n                      onChange={this.handleChange}\n                    >\n                      <option></option>\n                      <option value='6'>6 Months</option>\n                      <option value='18'>18 Months</option>\n                      <option value='12'>1 Year</option>\n                      <option value='24'>2 Years</option>\n                      <option value='36'>3 Years</option>\n                      <option value='48'>4 Years</option>\n                      <option value='60'>5 Years</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"rate\">\n                    <Form.Label>Interest Rate</Form.Label>\n                    <InputGroup className=\"mb-3\">\n                      <Form.Control \n                        placeholder=\"Enter interest rate\" \n                        type=\"number\" \n                        step=\"0.01\"\n                        value={this.state.rate}\n                        onChange={this.handleChange}\n                      />\n                      <InputGroup.Append>\n                        <InputGroup.Text>%</InputGroup.Text>\n                      </InputGroup.Append>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"repayment\">\n                    <Form.Label>Repayment Amount</Form.Label>\n                    <Form.Control \n                      placeholder=\"Enter repayment amount\" \n                      value={this.state.repayment}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"repayfreq\">\n                    <Form.Label>Repayment Frequency</Form.Label>\n                    <Form.Control \n                      as=\"select\" \n                      placeholder=\"Select repayment frequency\" \n                      value={this.state.repayfreq}\n                      onChange={this.handleChange}\n                    >\n                      <option></option>\n                      <option>Weekly</option>\n                      <option>Fortnightly</option>\n                      <option>Monthly</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"repaydate\">\n                    <Form.Label>Next Repayment Date</Form.Label>\n                    <Form.Control \n                      type=\"date\" \n                      placeholder=\"Enter next repayment date\" \n                      value={this.state.repaydate}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"compounds\">\n                    <Form.Label>Interest Compounds</Form.Label>\n                    <Form.Control \n                      as=\"select\" \n                      value={this.state.compounds}\n                      onChange={this.handleChange}\n                    >\n                      <option></option>\n                      <option value='month'>1st of the Month</option>\n                      <option value='repayment'>Same day as repayments</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Form.Group>\n                <Form.Label>Generate Schedule</Form.Label>\n                <div key='inline-radio' className=\"mb-3\">\n                  <Form.Check \n                    inline \n                    label='Daily' \n                    name='display' \n                    value='daily'\n                    type='radio' \n                    onChange={this.handleChange}\n                    id='gen-daily' />\n                  <Form.Check \n                    inline \n                    label=\"Weekly / Fortnightly / Monthly\" \n                    name='display'\n                    value='monthly'\n                    type='radio' \n                    onChange={this.handleChange}\n                    id='gen-monthly' />\n                </div>\n              </Form.Group>\n              <Button variant=\"success\" onClick={this.generate}>Create Schedule</Button>\n            </Form>\n            <br/>\n            <p>Assumptions:</p>\n            <ul>\n              <li>Interest accrued daily.</li>\n              <li>Daily interest is calculated after adding repayment or interest compounding adjustment.</li>\n            </ul>\n          </Col>\n          { this.state.schedule && this.state.schedule.length !== 0 &&\n            <Col>\n              <Card>\n                <Card.Body>\n                <h5>Loan Summary</h5>\n                <Row>\n                  <Col>Start date:</Col>\n                  <Col className='text-right'>{this.state.summary.sdate}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>End date:</Col>\n                  <Col className='text-right'>{this.state.summary.edate}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>Start balance:</Col>\n                  <Col className='text-right'>${this.state.summary.amount}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>End balance:</Col>\n                  <Col className='text-right'>${this.state.schedule[this.state.schedule.length -1].balance}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>Total repayments:</Col>\n                  <Col className='text-right'>${this.state.summary.repayment}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>Total interest:</Col>\n                  <Col className='text-right'>${this.state.summary.interest}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>Total principal paid:</Col>\n                  <Col className='text-right'>${this.state.summary.principal}</Col>\n                  <Col xs={3}/>\n                </Row>\n                {this.renderSummaryByYear()}\n                </Card.Body>\n              </Card>\n              <br/>\n\t\t\t\t\t\t\t<h5>Amortisation Schedule</h5>\n              {this.state.summary.display === 'daily' && this.renderDailySchedule()}\n              {this.state.summary.display === 'monthly' && this.renderMonthlySchedule()}\n            </Col>\n          }\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}