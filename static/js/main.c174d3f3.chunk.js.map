{"version":3,"sources":["LoanAmortisation.js","MinimumRepayment.js","App.js","serviceWorker.js","index.js"],"names":["frequency","LoanAmortisation","props","state","amount","rate","term","repayment","startdate","moment","format","compounds","repaydate","add","date","repayfreq","display","summary","schedule","undefined","handleChange","bind","handleTermChange","generate","persistedState","loadState","this","setState","event","target","name","id","value","r","shouldGenerateSchedule","end","push","Date","start","isSameOrBefore","current","repaymentdates","isRepaymentDate","find","d","getTime","Object","values","every","a","isBefore","incomplete","balance","brate","Big","div","times","m","s","y","isSameOrAfter","saveState","pprinciple","bamount","daily","dailyInterest","enddate","subtract","accrued","paccrued","tsched","samount","toFixed","interest","year","ysum","repaymentDates","repaymentdate","compoundingdate","isCompoundingDate","nyear","getYear","minus","plus","principle","compounding","sdate","edate","Table","responsive","hover","size","map","k","i","prefix","title","className","key","length","Row","Col","xs","Alert","variant","Form","Group","controlId","Label","Control","type","min","onChange","Text","placeholder","as","InputGroup","step","Append","Check","inline","label","disabled","checked","Button","onClick","Card","Body","renderSummaryByYear","renderDailySchedule","renderMonthlySchedule","Component","reducer","field","MinimumRepayment","initialState","mterm","alert","useReducer","dispatch","useState","setAlert","e","mrate","useEffect","rpv","denom","pow","mrp","laState","next","serializedState","sessionStorage","getItem","JSON","parse","err","stringify","setItem","console","log","App","active","setActive","renderLoanAmortisation","Container","Nav","fill","activeKey","onSelect","selectedKey","parseInt","Item","Link","href","eventKey","renderPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c174d3f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Big from 'big.js';\nimport { saveState, loadState } from './App';\n\nconst frequency = {\n  'Weekly': 7,\n  'Fortnightly': 14 \n}\n\nexport const storageKey = 'la-sched';\n\nclass LoanAmortisation extends Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = { \n      amount: '',\n      rate: '',\n      term: '',\n      repayment: '',\n      startdate: moment().format('YYYY-MM-DD'),\n      compounds: 'month',\n      repaydate: moment().add(1, 'months').date(1).format('YYYY-MM-DD'),\n      repayfreq: 'Monthly',\n      display: 'daily',\n      summary: {},\n      schedule: undefined\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.generate = this.generate.bind(this);\n  }\n\n  componentDidMount() {\n    const persistedState = loadState(storageKey);\n\t\t/*\n\t\t * handle page refreshes without losing state.\n\t\t */\n    if (persistedState !== undefined) {\n      this.setState(persistedState);\n    }\n  }\n\n  handleChange(event) {\n    const {name, id, value} = event.target;\n    name ? this.setState({[name] : value}) : this.setState({[id] : value});\n  }\n\n  handleTermChange(event) {\n    if ( event.target.value === '360' ) {\n      this.setState({'display': 'monthly'});\n    }\n    this.handleChange(event);\n  }\n\n  repaymentDates() {\n    const { term, startdate, repaydate, repayfreq } = this.state;\n    let r = [];\n\n    if (! this.shouldGenerateSchedule()) {\n      return r;\n    }\n\n    let end = moment(startdate).add(term, 'months');\n    // r.push(moment(repaydate));\n    r.push(new Date(repaydate));\n\n    let start = moment(repaydate);\n\n    if (this.state.repayfreq === 'Monthly') {\n      start.add(1, 'months');\n\n      while (start.isSameOrBefore(end)) {\n        r.push(new Date(start.format('YYYY-MM-DD')));\n        // r.push(moment(start));\n        start.add(1, 'months');\n      }\n    }\n    else {\n      start.add(frequency[repayfreq], 'days');\n\n      while (start.isSameOrBefore(end)) {\n        r.push(new Date(start.format('YYYY-MM-DD')));\n        // r.push(moment(start));\n        start.add(frequency[repayfreq], 'days');\n      }\n    }\n\n    return r;\n  }\n\n  isCompoundingDate(current, repaymentdates) {\n    if (this.state.compounds === 'month') {\n      return current.date() === 1;\n    }\n    return this.isRepaymentDate(new Date(current.format('YYYY-MM-DD')), repaymentdates);\n  }\n\n  isRepaymentDate(current, repaymentdates) {\n    // const f = repaymentdates.find((d) => current.isSame(d, 'day')) \n    const f = repaymentdates.find((d) => {\n      return current.getTime() === d.getTime();\n    }); \n    return f !== undefined;\n  }\n\n  /* Basic validation for form.\n   * Every form field should be filled.\n   */\n  shouldGenerateSchedule() {\n    if (Object.values(this.state).every((a) => a !== '')) {\n      let ldate = moment(this.state.startdate);\n\n      // Prevent schedules for crazy length periods\n      if (ldate.isBefore(moment('2019-01-01'))) {\n        this.setState({incomplete: true});\n        return false;\n      }\n      this.setState({incomplete: false});\n      return true;\n    }\n    this.setState({incomplete: true});\n    return false;\n  }\n\n  dailyInterest(balance) {\n    let brate = Big(this.state.rate);\n    brate = brate.div(100);\n    let annual = balance.times(brate);\n    return annual.div(365);\n    // return balance.times(Big(this.state.rate).div(100)).div(365);\n  }\n\n  getYear(m, s, y) { return m.isSameOrAfter(moment(s).add(y, 'years'), 'day') ? y+1 : y }; \n\n  generate() {\n    const { amount, \n            display, \n            startdate, \n            repayment,\n            term } = this.state; \n\n    saveState(storageKey, this.state);\n    if (! this.shouldGenerateSchedule()) {\n      this.setState({schedule: undefined});\n      return;\n    }\n\n    let bamount = Big(amount);\n    let daily = this.dailyInterest(bamount);\n    let enddate = moment(startdate).add(term, 'months').subtract('1', 'days');\n\n    // Current accrued interest.\n    let accrued = Big(0);\n    // Previous period accrued interest.\n    let paccrued = Big(0);\n\n    // Previious period principle paid.\n    let pprinciple;\n\n    /* Generate data for the schedule and summary.\n    */\n    let tsched = [];\n    let summary = {samount: bamount.toFixed(2),\n                   interest: Big(0),\n                   repayment: Big(0),\n                   year: []\n                  };\n\n    let year = 1;\n    let ysum = { 'year': year, interest: 0};\n    let repaymentdates = this.repaymentDates()\n\n    for (var m = moment(startdate); m.isSameOrBefore(enddate); m.add(1, 'days')) {\n      let repaymentdate = this.isRepaymentDate( new Date(m.format('YYYY-MM-DD')), repaymentdates );\n      let compoundingdate = this.isCompoundingDate( m, repaymentdates );\n      let nyear = this.getYear(m, startdate, year);\n      if (nyear > year) {\n        summary.year.push(ysum);\n        year = nyear;\n        ysum = { 'year': year, interest: 0};\n      }\n\n      if (repaymentdate) {\n        /* On a repayment date, reduce loan balance and calculate new\n         * daily interest.\n         */\n        bamount = bamount.minus(repayment);\n        daily = this.dailyInterest(bamount);\n        summary.repayment = summary.repayment.add(repayment);\n      } \n      if (compoundingdate) {\n        /* On interest compounding date, increase loan balance, calculate new\n         * daily interest, and reset accrued interest.\n         */\n        bamount = bamount.plus(accrued);\n        paccrued = accrued;\n        accrued = Big(0);\n        daily = this.dailyInterest(bamount);\n      } \n      /* Last transaction of each day is to accrue the interest for the day.\n      */\n      accrued = accrued.add(daily);\n      summary.interest = summary.interest.add(daily);\n      ysum.interest = Big(ysum.interest).add(daily).toFixed(2);\n\n      pprinciple = this.state.compounds === 'repayment' ? \n        Big(this.state.repayment).minus(paccrued).toFixed(2) :\n        undefined;\n\n      /* Update the schedule data depending on the display type selected.\n       */\n      if ((display === 'monthly' &&\n          compoundingdate ) ||\n          display === 'daily') {\n        tsched.push({date: m.format('DD/MM/YYYY'),\n                      balance: bamount.toFixed(2),\n                      accrued: accrued.toFixed(2),\n                      paccrued: paccrued.toFixed(2),\n                      principle: pprinciple,\n                      daily: daily.toFixed(2),\n                      repayment: repaymentdate,\n                      compounding: compoundingdate }\n                      );\n      }\n    }\n    /* Apply any accrued interest to get the final loan balance.\n    */\n    bamount = bamount.plus(accrued);\n    tsched.push({date: 'Final Balance',\n                  balance: bamount.toFixed(2),\n                  accrued: '',\n                  daily: ''}\n                  );\n\n    summary.principle = summary.repayment.minus(summary.interest).toFixed(2);\n    summary.interest = summary.interest.toFixed(2);\n    summary.repayment = summary.repayment.toFixed(2);\n    summary.sdate = moment(startdate).format('DD/MM/YYYY');\n    summary.edate = moment(enddate).format('DD/MM/YYYY');\n    summary.amount = Big(amount).toFixed(2);\n    summary.display = display;\n    summary.year.push(ysum);\n    this.setState({schedule: tsched, summary});\n  }\n\n  renderDailySchedule() {\n    return (\n      <Table responsive hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Daily Interest</th>\n            <th>Accrued Interest</th>\n            <th>Loan Balance</th>\n          </tr>\n        </thead>\n        <tbody>\n        { this.state.schedule.map((k, i) => {\n            let prefix = k.repayment ? 'table-success' : '';\n            prefix = k.compounding ? 'table-danger' : prefix;\n            let title = k.repayment ? 'Repayment today' : '';\n            title = k.compounding ? 'Interest compounds today' : title;\n            return (\n              <tr className={prefix} key={i} title={title}>\n                <td>{k.date}</td>\n                <td className='text-right'>{k.daily}</td>\n                <td className='text-right'>{k.accrued}</td>\n                <td className='text-right'>{k.balance}</td>\n              </tr>\n            )\n          })\n        }\n        </tbody>\n      </Table>\n    ) \n  }\n\n  renderMonthlySchedule() {\n    return (\n      <Table responsive hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            { this.state.schedule[0].principle &&\n              <th className='text-right'>Principle</th>\n            }\n            <th className='text-right'>Interest</th>\n            <th className='text-right'>Loan Balance</th>\n          </tr>\n        </thead>\n        <tbody>\n        { this.state.schedule.map((k, i) => {\n            return (\n              <tr key={i}>\n                <td>{k.date}</td>\n                { k.principle &&\n                  <td className='text-right'>{k.principle}</td>\n                }\n                <td className='text-right'>{k.paccrued}</td>\n                <td className='text-right'>{k.balance}</td>\n              </tr>\n            )\n          })\n        }\n        </tbody>\n      </Table>\n    ) \n  }\n\n  renderSummaryByYear() {\n    if (this.state.summary.year.length <= 1) {\n      return null;\n    } \n\n    return (\n      <>\n        { this.state.summary.year.map((k, i) => {\n            return (\n              <Row key={i}>\n                <Col>Year {k.year} Interest:</Col>\n                <Col className='text-right'>${k.interest}</Col>\n                <Col xs={3}/>\n              </Row>\n            )\n          })\n        }\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <h4>Generate a Loan Amortisation Schedule</h4>\n        <br/>\n        { this.state.incomplete &&\n          <Alert variant='danger'>Please enter valid values in <strong>every</strong> field.</Alert>\n        }\n        <Row>\n          <Col>\n            <p>Fill out all fields in the form below and select Create Schedule.</p>\n            <Form>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"amount\">\n                    <Form.Label>Loan Amount</Form.Label>\n                    <Form.Control \n                      type='number'\n                      min='0'\n                      value={this.state.amount}\n                      onChange={this.handleChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      The starting loan amount, or an amount taken from a statement on a date which interest was charged (ie no accrued interest).\n                    </Form.Text>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"startdate\">\n                    <Form.Label>as at</Form.Label>\n                    <Form.Control \n                      type=\"date\" \n                      placeholder=\"Enter the date that your loan was this amount.\"\n                      value={this.state.startdate}\n                      onChange={this.handleChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      Earliest permitted date is 1/1/2019.\n                    </Form.Text>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"term\">\n                    <Form.Label>Loan Term</Form.Label>\n                    <Form.Control \n                      as=\"select\" \n                      value={this.state.term}\n                      onChange={this.handleTermChange}\n                    >\n                      <option></option>\n                      <option value='6'>6 Months</option>\n                      <option value='18'>18 Months</option>\n                      <option value='12'>1 Year</option>\n                      <option value='24'>2 Years</option>\n                      <option value='36'>3 Years</option>\n                      <option value='48'>4 Years</option>\n                      <option value='60'>5 Years</option>\n                      <option value='72'>6 Years</option>\n                      <option value='84'>7 Years</option>\n                      <option value='96'>8 Years</option>\n                      <option value='108'>9 Years</option>\n                      <option value='120'>10 Years</option>\n                      <option value='132'>11 Years</option>\n                      <option value='144'>12 Years</option>\n                      <option value='156'>13 Years</option>\n                      <option value='168'>14 Years</option>\n                      <option value='180'>15 Years</option>\n                      <option value='192'>16 Years</option>\n                      <option value='204'>17 Years</option>\n                      <option value='216'>18 Years</option>\n                      <option value='228'>19 Years</option>\n                      <option value='240'>20 Years</option>\n                      <option value='252'>21 Years</option>\n                      <option value='264'>22 Years</option>\n                      <option value='276'>23 Years</option>\n                      <option value='288'>24 Years</option>\n                      <option value='300'>25 Years</option>\n                      <option value='312'>26 Years</option>\n                      <option value='324'>27 Years</option>\n                      <option value='336'>28 Years</option>\n                      <option value='348'>29 Years</option>\n                      <option value='360'>30 Years</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"rate\">\n                    <Form.Label>Interest Rate</Form.Label>\n                    <InputGroup className=\"mb-3\">\n                      <Form.Control \n                        placeholder=\"Enter interest rate\" \n                        type=\"number\" \n                        step=\"0.01\"\n                        value={this.state.rate}\n                        onChange={this.handleChange}\n                      />\n                      <InputGroup.Append>\n                        <InputGroup.Text>%</InputGroup.Text>\n                      </InputGroup.Append>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"repayment\">\n                    <Form.Label>Repayment Amount</Form.Label>\n                    <Form.Control \n                      placeholder=\"Enter repayment amount\" \n                      value={this.state.repayment}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"repayfreq\">\n                    <Form.Label>Repayment Frequency</Form.Label>\n                    <Form.Control \n                      as=\"select\" \n                      placeholder=\"Select repayment frequency\" \n                      value={this.state.repayfreq}\n                      onChange={this.handleChange}\n                    >\n                      <option></option>\n                      <option>Weekly</option>\n                      <option>Fortnightly</option>\n                      <option>Monthly</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"repaydate\">\n                    <Form.Label>Next Repayment Date</Form.Label>\n                    <Form.Control \n                      type=\"date\" \n                      placeholder=\"Enter next repayment date\" \n                      value={this.state.repaydate}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"compounds\">\n                    <Form.Label>Interest Compounds</Form.Label>\n                    <Form.Control \n                      as=\"select\" \n                      value={this.state.compounds}\n                      onChange={this.handleChange}\n                    >\n                      <option></option>\n                      <option value='month'>1st of the Month</option>\n                      <option value='repayment'>Same day as repayments</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Form.Group>\n                <Form.Label>Generate Schedule</Form.Label>\n                <div key='inline-radio' className=\"mb-3\">\n                  <Form.Check \n                    inline \n                    label='Daily' \n                    name='display' \n                    value='daily'\n                    type='radio' \n                    disabled={this.state.term === '360'}\n                    onChange={this.handleChange}\n                    id='gen-daily' />\n                  <Form.Check \n                    inline \n                    label=\"Weekly / Fortnightly / Monthly\" \n                    name='display'\n                    value='monthly'\n                    type='radio' \n                    checked={this.state.display === 'monthly'}\n                    onChange={this.handleChange}\n                    id='gen-monthly' />\n                </div>\n              </Form.Group>\n              <Button variant=\"success\" onClick={this.generate}>Create Schedule</Button>\n            </Form>\n            <br/>\n            <p>Assumptions:</p>\n            <ul>\n              <li>Interest accrued daily.</li>\n              <li>Daily interest is calculated after adding repayment or interest compounding adjustment.</li>\n            </ul>\n          </Col>\n          { this.state.schedule && this.state.schedule.length !== 0 &&\n            <Col>\n              <Card>\n                <Card.Body>\n                <h5>Loan Summary</h5>\n                <Row>\n                  <Col>Start date:</Col>\n                  <Col className='text-right'>{this.state.summary.sdate}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>End date:</Col>\n                  <Col className='text-right'>{this.state.summary.edate}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>Start balance:</Col>\n                  <Col className='text-right'>${this.state.summary.amount}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>End balance:</Col>\n                  <Col className='text-right'>${this.state.schedule[this.state.schedule.length -1].balance}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>Total repayments:</Col>\n                  <Col className='text-right'>${this.state.summary.repayment}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>Total interest:</Col>\n                  <Col className='text-right'>${this.state.summary.interest}</Col>\n                  <Col xs={3}/>\n                </Row>\n                <Row>\n                  <Col>Total principle paid:</Col>\n                  <Col className='text-right'>${this.state.summary.principle}</Col>\n                  <Col xs={3}/>\n                </Row>\n                {this.renderSummaryByYear()}\n                </Card.Body>\n              </Card>\n              <br/>\n\t\t\t\t\t\t\t<h5>Amortisation Schedule</h5>\n              {this.state.summary.display === 'daily' && this.renderDailySchedule()}\n              {this.state.summary.display === 'monthly' && this.renderMonthlySchedule()}\n            </Col>\n          }\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default LoanAmortisation;\n","import React, { useEffect, useReducer, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Big from 'big.js';\nimport { saveState, loadState } from './App';\nimport { storageKey as laKey } from './LoanAmortisation';\n\nconst storageKey = 'la-mrp';\n\nfunction reducer (state, {field, value}) {\n  return {\n    ...state,\n    [field]: value\n  }\n}\n\nconst MinimumRepayment = (props) => {\n  const initialState = loadState(storageKey) !== undefined ? loadState(storageKey) :\n                        {\n                          amount: '',\n                          rate: '',\n                          term: '',\n                          mterm: undefined,\n                          alert: undefined\n                        };\n  \n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [alert, setAlert] = useState(null);\n\n  const onChange = (e) => {\n    dispatch({field: e.target.name, value: e.target.value});\n  }\n\n  const {amount, rate, mrate, term } = state;\n\n  useEffect(() => {\n    dispatch({field: 'mrate', value: rate / 1200})\n  },[rate]);\n\n  useEffect(() => {\n  },[state]);\n\n  const calculateMinimumRepayment = () => {\n\n    if (amount === '' || rate === '' || term === '') {\n      setAlert(<Alert variant='danger'>Please enter valid values in <strong>every</strong> field.</Alert>);\n      return;\n    }\n\n    const rpv = Big(mrate).times(Big(amount));\n    const denom = Big(1).minus((Big(1).plus(Big(mrate))).pow(term * -1));\n    const mrp = rpv.div(denom).toFixed(2);\n    dispatch({field: 'mrp', value: mrp});\n\n    const laState = loadState(laKey) !== undefined ? \n                    loadState(laKey) : {};\n\n    saveState (storageKey, {...state});\n    saveState (laKey, \n      {...laState, \n        amount: amount,\n        rate: rate,\n        term: term,\n        repayment: mrp,\n        compounds: 'month',\n        repayfreq: 'Monthly',\n        summary: {},\n        schedule: undefined\n      });\n    setAlert(<Alert variant='danger'>Minimum monthly repayment on this loan is <strong>${mrp}</strong>.</Alert>);\n  }\n\n  return (\n    <>\n        <h4>Calculate Minimum Loan Repayment Amount</h4>\n        <Form>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"amount\">\n                <Form.Label>Loan Amount</Form.Label>\n                <Form.Control \n                  name='amount'\n                  type='number'\n                  min='0'\n                  value={amount}\n                  onChange={onChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  The starting loan amount, or the amount of a property you are looking at.\n                </Form.Text>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"rate\">\n                <Form.Label>Interest Rate</Form.Label>\n                <Form.Control \n                  name='rate'\n                  type='number'\n                  min='0'\n                  value={rate}\n                  onChange={onChange}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"term\">\n                <Form.Label>Loan Term</Form.Label>\n                <Form.Control \n                  name='term'\n                  as=\"select\" \n                  onChange={onChange}\n                  value={term} >\n                  <option></option>\n                  <option value='12'>1 Year</option>\n                  <option value='24'>2 Years</option>\n                  <option value='36'>3 Years</option>\n                  <option value='48'>4 Years</option>\n                  <option value='60'>5 Years</option>\n                  <option value='72'>6 Years</option>\n                  <option value='84'>7 Years</option>\n                  <option value='96'>8 Years</option>\n                  <option value='108'>9 Years</option>\n                  <option value='120'>10 Years</option>\n                  <option value='132'>11 Years</option>\n                  <option value='144'>12 Years</option>\n                  <option value='156'>13 Years</option>\n                  <option value='168'>14 Years</option>\n                  <option value='180'>15 Years</option>\n                  <option value='192'>16 Years</option>\n                  <option value='204'>17 Years</option>\n                  <option value='216'>18 Years</option>\n                  <option value='228'>19 Years</option>\n                  <option value='240'>20 Years</option>\n                  <option value='252'>21 Years</option>\n                  <option value='264'>22 Years</option>\n                  <option value='276'>23 Years</option>\n                  <option value='288'>24 Years</option>\n                  <option value='300'>25 Years</option>\n                  <option value='312'>26 Years</option>\n                  <option value='324'>27 Years</option>\n                  <option value='336'>28 Years</option>\n                  <option value='348'>29 Years</option>\n                  <option value='360'>30 Years</option>\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Button variant=\"success\" onClick={calculateMinimumRepayment}>Calculate</Button>\n          <Button variant=\"success\" className='float-right' onClick={props.next}>Continue to Amortisation Schedule ></Button>\n        </Form>\n        <br/>\n        {alert}\n    </>\n  )\n}\n\nexport default MinimumRepayment;\n","import React, { useState } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport MinimumRepayment from './MinimumRepayment';\nimport LoanAmortisation from './LoanAmortisation';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n/* \n * Load state from sessionStorage.\n */\nexport const loadState = (key) => {\n    try {\n        const serializedState = sessionStorage.getItem(key);\n        if (serializedState == null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n\n/* \n * Save state to sessionStorage.\n */\nexport const saveState = (key, state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(key, serializedState);\n    }\n    catch (err){\n        console.log(\"error saving state to sessionStorage\", key, state);\n    }\n};\n\nconst App = () => {\n    \n    const [active, setActive] = useState(1);\n\n    const renderLoanAmortisation = () => {\n        setActive(2);\n    }\n\n\n    const renderPage = () => {\n        switch (active) {\n            case 1:\n                return <MinimumRepayment next={renderLoanAmortisation}/>\n            case 2:\n                return <LoanAmortisation/>\n            default:\n                return <MinimumRepayment next={renderLoanAmortisation}/>\n        }\n    }\n\n  return (\n    <Container>\n        <Card>\n        <Card.Body>\n        <Nav\n            fill \n            variant=\"tabs\" \n            activeKey={active}\n            onSelect={selectedKey => setActive(parseInt(selectedKey))}\n            >\n            <Nav.Item>\n                <Nav.Link href=\"#\" eventKey={1}>Minimum Repayment Calculator</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey={2}>Loan Amortisation Schedule</Nav.Link>\n            </Nav.Item>\n        </Nav>\n        <br/>\n        {renderPage()}\n        </Card.Body>\n        </Card>\n    </Container>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}